java.util.NoSuchElementException: next on empty iterator
occurred in the presentation compiler.

action parameters:
offset: 644
uri: file:///C:/Users/sguir/Desktop/GESTION%20CLIENT%20APP/app/mongo/app_e_feray/src/main/java/com/application/mongo/app_e_feray/entities/ventes.java
text:
package com.application.mongo.app_e_feray.entities;

import java.io.Serializable;
import java.sql.Date;
import java.util.ArrayList;

import java.util.List;

import org.springframework.data.mongodb.core.mapping.Document;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonProperty.Access;
import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.core.type.TypeReference;
import com.fasterxml.jackson.databind.ObjectMapper;

import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;
import lombok.ToString;

@Document@@
@Data
@NoArgsConstructor
@AllArgsConstructor
@ToString
public class ventes implements Serializable {

    @Id
    @GeneratedValue(strategy = GenerationType.AUTO)
    private Long id;
    private String code;
    private Date date;
    private double prix;
    private Double espece;
    private String numeroCommande;
    private String nomClient;
    private String typePayement = "espece";
    private String numeroCompte = "espece";

    @ElementCollection
    // @Convert(converter = ElementConvertor.class)
    private List<String> articles_ = new ArrayList<>();
    @ElementCollection
    private List<String> remboursement = new ArrayList<>();

    public void addVentes(String item) {
        this.remboursement.add(0, item);
    }

    // @OneToMany()
    // private List<SingleArticle> article2 = new ArrayList<>();

    // public void addArticleVente(SingleArticle s) {
    // this.article2.add(0, s);
    // }

}

@Data
// @Entity
@AllArgsConstructor
@NoArgsConstructor
class SingleArticle implements Serializable {
    // @Id
    // private int id;

    private String nom;
    private int quantite;
    private double prix;
}

class ElementConvertor implements AttributeConverter<List<SingleArticle>, String> {

    private final ObjectMapper objectMapper = new ObjectMapper();

    @Override
    public String convertToDatabaseColumn(List<SingleArticle> attribute) {
        try {
            return objectMapper.writeValueAsString(attribute);
        } catch (JsonProcessingException e) {
            return null;
        }

    }

    @Override
    public List<SingleArticle> convertToEntityAttribute(String dbData) {
        try {
            return objectMapper.readValue(dbData, new TypeReference<List<SingleArticle>>() {

            });
        } catch (JsonProcessingException e) {
            return null;
        }
    }

}


error stacktrace:
scala.collection.Iterator$$anon$19.next(Iterator.scala:973)
	scala.collection.Iterator$$anon$19.next(Iterator.scala:971)
	scala.collection.mutable.MutationTracker$CheckedIterator.next(MutationTracker.scala:76)
	scala.collection.IterableOps.head(Iterable.scala:222)
	scala.collection.IterableOps.head$(Iterable.scala:222)
	scala.collection.AbstractIterable.head(Iterable.scala:933)
	dotty.tools.dotc.interactive.InteractiveDriver.run(InteractiveDriver.scala:168)
	scala.meta.internal.pc.MetalsDriver.run(MetalsDriver.scala:45)
	scala.meta.internal.pc.SignatureHelpProvider$.signatureHelp(SignatureHelpProvider.scala:40)
	scala.meta.internal.pc.ScalaPresentationCompiler.signatureHelp$$anonfun$1(ScalaPresentationCompiler.scala:371)
